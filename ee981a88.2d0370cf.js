(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{101:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return l}));var r=n(3),a=n(7),c=(n(0),n(107)),b={id:"app_unit",title:"app.unit"},i={unversionedId:"reference-env/app_unit",id:"reference-env/app_unit",isDocsHomePage:!1,title:"app.unit",description:"Unit conversion utility. This help us convert unit (as example dp to px) easily.",source:"@site/docs\\reference-env\\app_unit.md",slug:"/reference-env/app_unit",permalink:"/docs/reference-env/app_unit",editUrl:"https://github.com/fiwl-js/fiwl-js.github.io/edit/main/docs/reference-env/app_unit.md",version:"current",sidebar:"docs",previous:{title:"app.display",permalink:"/docs/reference-env/app_display"},next:{title:"app.unit.Types",permalink:"/docs/reference-env/app_unit_types"}},p=[{value:"Constants",id:"constants",children:[]},{value:"Methods",id:"methods",children:[{value:"convert",id:"convert",children:[]},{value:"resolve",id:"resolve",children:[]}]}],o={toc:p};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Unit conversion utility. This help us convert unit (as example ",Object(c.b)("inlineCode",{parentName:"p"},"dp")," to ",Object(c.b)("inlineCode",{parentName:"p"},"px"),") easily."),Object(c.b)("h2",{id:"constants"},"Constants"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Type"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)("a",Object(r.a)({parentName:"td"},{href:"app_unit_types"}),"Types")),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"object"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"Unit constants. We use this for parameters of ",Object(c.b)("inlineCode",{parentName:"td"},"app.unit.convert"))))),Object(c.b)("h2",{id:"methods"},"Methods"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Name"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Return Type"),Object(c.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)("a",Object(r.a)({parentName:"td"},{href:"#convert"}),"convert")),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"number"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"Scale a number based on two units.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),Object(c.b)("a",Object(r.a)({parentName:"td"},{href:"#resolve"}),"resolve")),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"number"),Object(c.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"Resolve unit suffix of a string then convert it to px.")))),Object(c.b)("hr",null),Object(c.b)("h3",{id:"convert"},"convert"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"app.unit.convert(value, fromUnit, toUnit?);\n")),Object(c.b)("p",null,"Scale a number based on two units. If ",Object(c.b)("inlineCode",{parentName:"p"},"toUnit")," ignored, then destination unit assumed as ",Object(c.b)("inlineCode",{parentName:"p"},"px"),"."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"value: (",Object(c.b)("em",{parentName:"li"},"number")," type) a Number to be converted"),Object(c.b)("li",{parentName:"ol"},"fromUnit: (",Object(c.b)("em",{parentName:"li"},"number")," type) Unit of value. Use ",Object(c.b)("inlineCode",{parentName:"li"},"app.unit.Types.*")," for this parameter."),Object(c.b)("li",{parentName:"ol"},"toUnit: (",Object(c.b)("em",{parentName:"li"},"number")," type, Optional) Unit of result. Use ",Object(c.b)("inlineCode",{parentName:"li"},"app.unit.Types.*")," for this parameter.")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Return:")," number"),Object(c.b)("hr",null),Object(c.b)("h3",{id:"resolve"},"resolve"),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"app.unit.resolve(value, percentFactor?);\n")),Object(c.b)("p",null,"Resolve unit suffix of a string then convert it to px. However, if the value is number then returns that value."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"value: (",Object(c.b)("em",{parentName:"li"},"string")," or ",Object(c.b)("em",{parentName:"li"},"number")," type) a String that contains number with unit or just a plain number."),Object(c.b)("li",{parentName:"ol"},"percentFactor: (",Object(c.b)("em",{parentName:"li"},"number")," type, Optional) This parameter tells ",Object(c.b)("inlineCode",{parentName:"li"},'"100%"')," is equals what pixels. If ignored, then ",Object(c.b)("inlineCode",{parentName:"li"},'"100%" == "100px"'),".")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Return:")," number"))}l.isMDXComponent=!0},107:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return O}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=a.a.createContext({}),l=function(e){var t=a.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return a.a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,b=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,O=u["".concat(b,".").concat(m)]||u[m]||s[m]||c;return n?a.a.createElement(O,i(i({ref:t},o),{},{components:n})):a.a.createElement(O,i({ref:t},o))}));function O(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,b=new Array(c);b[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,b[1]=i;for(var o=2;o<c;o++)b[o]=n[o];return a.a.createElement.apply(null,b)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);