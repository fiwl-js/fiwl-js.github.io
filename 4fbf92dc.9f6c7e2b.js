(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{107:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),b=r,f=d["".concat(i,".").concat(b)]||d[b]||u[b]||a;return n?o.a.createElement(f,c(c({ref:t},s),{},{components:n})):o.a.createElement(f,c({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),a=(n(0),n(107)),i={id:"style",title:"Styling"},c={unversionedId:"guide/style",id:"guide/style",isDocsHomePage:!1,title:"Styling",description:"FIWL is not using CSS for styling because every drawing procedure done by every widgets. Instead of telling widgets how to draw, we ask them what default color, text size, and any else. You could modify the style.varl to personalize styling.",source:"@site/docs\\guide\\style.md",slug:"/guide/style",permalink:"/docs/guide/style",editUrl:"https://github.com/fiwl-js/fiwl-js.github.io/edit/main/docs/guide/style.md",version:"current",sidebar:"docs",previous:{title:"Scripts & Events",permalink:"/docs/guide/script_event"},next:{title:"app",permalink:"/docs/reference-env/app"}},l=[{value:"Default values",id:"default-values",children:[]},{value:"How to configure?",id:"how-to-configure",children:[]},{value:"Access from Script / Event",id:"access-from-script--event",children:[]}],s={toc:l};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"FIWL is not using CSS for styling because every drawing procedure done by every widgets. Instead of telling widgets how to draw, we ask them what default color, text size, and any else. You could modify the ",Object(a.b)("inlineCode",{parentName:"p"},"style.varl")," to personalize styling."),Object(a.b)("h2",{id:"default-values"},"Default values"),Object(a.b)("p",null,"Everything inside ",Object(a.b)("inlineCode",{parentName:"p"},"style.varl")," are optional and being emptied is completely legal. Thus, we have default values for styling:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"primaryColor         = 0x5c6bc0\nprimaryLightColor    = 0x8e99f3\nprimaryDarkColor     = 0x26418f\nonPrimaryColor       = 0xffffff\nsecondaryColor       = 0x4caf50\nsecondaryLightColor  = 0x80e27e\nsecondaryDarkColor   = 0x087f23\nonSecondaryColor     = 0xffffff\nerrorColor           = 0xb00020\nonErrorColor         = 0xffffff\ntextColor            = 0x000000\nforegroundColor      = 0x000000\nbackgroundColor      = 0xffffff\nstageBackgroundColor = 0xdfdfdf\ndisplayTextSize      = 48sp\ntitleTextSize        = 38sp\nheaderTextSize       = 32sp\nbodyTextSize         = 12sp\ncontrolTextSize      = 24sp\n")),Object(a.b)("h2",{id:"how-to-configure"},"How to configure?"),Object(a.b)("p",null,"To configure styling, just add ",Object(a.b)("inlineCode",{parentName:"p"},"key = value")," pairings to ",Object(a.b)("inlineCode",{parentName:"p"},"style.varl")," as example below."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"primaryColor = 0xE91E63\nsecondaryColor = 0xFFC107\n")),Object(a.b)("p",null,"We can also add comment to ",Object(a.b)("inlineCode",{parentName:"p"},"style.varl")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"*Some basic configs:\nprimaryColor = 0xE91E63\nsecondaryColor = 0xFFC107\n")),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},"style.varl")," is not strict, you could add your own custom configuration"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"*Some basic configs\nprimaryColor = 0xE91E63\nsecondaryColor = 0xFFC107\n\n*My custom configs\ncolorForButtons = 0x9E9E9E\n")),Object(a.b)("p",null,"Then apply to desired widget:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-xml"}),'...\n    <Button\n      backgroundColor="@style/colorForButtons"/>\n...\n')),Object(a.b)("h2",{id:"access-from-script--event"},"Access from Script / Event"),Object(a.b)("p",null,"FIWL allows you to access stylings from logic side (script or event tags), here is the example:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-xml"}),'...\n  <event on="ready">\n    console.log(app.res.style.primaryColor);\n  </event>\n...\n')),Object(a.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(a.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"caution")),Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("p",{parentName:"div"},"Getting value from ",Object(a.b)("inlineCode",{parentName:"p"},"app.res.style*"),' should be done at "ready" event. Otherwise, it won\'t referencing to your configured ',Object(a.b)("inlineCode",{parentName:"p"},"style.varl")))))}p.isMDXComponent=!0}}]);